-----------------------------------------------------------------------------------------------------------------------------
--<inner join>
--Oracle
select e.first_name as 이름, d.department_id, d.manager_id
from departments d, employees e
where e.department_id = d.department_id and e.manager_id = d.manager_id;
--ANSI 표준
select first_name as 이름, department_id as 부서코드, manager_id as 매니저ID
from employees inner join departments using(department_id, manager_id);
-----------------------------------------------------------------------------------------------------------------------------
--내용은 같은데 컬럼명이 다른 경우에 조인으로 연결하기
--사전 작업1 : 테이블 복사
create table locations2 as select * from locations; --locations 테이블을 복사하여 locations2 테이블 생성
select * from locations2;
--사전 작업2 : location_id 컬럼명 loc_id로 변경
alter table locations2 rename column location_id to loc_id;
--내용은 같은데 컬럼명이 다른 경우에 조인으로 연결하기 수행
--Orale
select d.department_id, l.city
from departments d, locations2 l
where d.location_id = l.loc_id;
--ANSI 표준
select department_id, city 
from departments d join locations2 l on (d.location_id = l.loc_id);
-----------------------------------------------------------------------------------------------------------------------------
--self join
--사원과 관리자 연결
--Oracle
select e.employee_id as 사원번호, e.last_name as 사원이름, e2.last_name as 관리자
from employees e, employees e2
where e2.manager_id = e.employee_id;
--ANSI 표준
select e.employee_id as 사원번호, e.last_name as 사원이름, e2.last_name as 관리자
from employees e join employees e2 on(e2.manager_id = e.employee_id);
-----------------------------------------------------------------------------------------------------------------------------
--cross join : 모든 행에 대해 가능한 모든 조합 생성
select * from countries, locations; --575 reccords
select * from countries cross join locations; --575 reccords
-----------------------------------------------------------------------------------------------------------------------------
--Non Equi join  : 어느 범위에 속하는 지 여부를 확인
create table salgrade( 
    salvel varchar2(2),
    lowst number,
    highst number);
--delete from salgrade;
insert into salgrade values('A', 20000, 29999);
insert into salgrade values('B', 10000, 19999);
insert into salgrade values('C', 0, 9999);
select * from salgrade;
--조인 수행
select last_name, salary, salvel 
from employees join salgrade on (salary between lowst and highst) order by salary desc;  
-----------------------------------------------------------------------------------------------------------------------------
--여러 개의 테이블 조인
--업무ID가 같은 사원들의 사원 이름, 업무 내용, 부서 이름 출력(employees, jobs, departments 테이블 조인)
select job_id as 업무ID, last_name as 사원이름, job_title as 업무내용, department_name as 부서이름
from employees join departments using(department_id)
              join jobs using(job_id);
--desc employees;
--desc departments;
--desc locations;
--desc countries;
select * from locations;
-----------------------------------------------------------------------------------------------------------------------------
select last_name as 사원이름, city as 도시, department_name as 부서이름
from employees join departments using(department_id)
               join locations using(location_id)
where city in ('Seattle', 'Oxford')
order by city;
-----------------------------------------------------------------------------------------------------------------------------
select employee_id as 사원번호, last_name as 사원이름, department_name as 부서이름, city as 도시, 
       state_province as 도시주소, country_name as 국가명
from employees e join departments d on e.department_id = d.department_id
                 join locations l on d.location_id = l.location_id
                 join countries c on l.country_id = c.country_id
where city like '%Sa%' or city like '%Si%' or city like '%Be%'
order by country_name, city;
-----------------------------------------------------------------------------------------------------------------------------
select * from tab;
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

